{
	"id": "493680d0e05866c9a935ab7e7c11c835",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyWallet.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.8.2 <0.9.0;\n\ncontract MyWallet {\n    address owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function deposit() public payable {}\n\n    function withdraw() public {\n        require(msg.sender == owner);\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    function withdraw(uint256 value) public {\n        require(msg.sender == owner);\n        payable(msg.sender).transfer(value);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MyWallet.sol": {
				"MyWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyWallet.sol\":69:481  contract MyWallet {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyWallet.sol\":113:162  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/MyWallet.sol\":145:155  msg.sender */\n  caller\n    /* \"contracts/MyWallet.sol\":137:142  owner */\n  0x00\n  dup1\n    /* \"contracts/MyWallet.sol\":137:155  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyWallet.sol\":69:481  contract MyWallet {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyWallet.sol\":69:481  contract MyWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyWallet.sol\":349:479  function withdraw(uint256 value) public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/MyWallet.sol\":210:343  function withdraw() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/MyWallet.sol\":168:204  function deposit() public payable {} */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/MyWallet.sol\":349:479  function withdraw(uint256 value) public {... */\n    tag_9:\n        /* \"contracts/MyWallet.sol\":421:426  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyWallet.sol\":407:426  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyWallet.sol\":407:417  msg.sender */\n      caller\n        /* \"contracts/MyWallet.sol\":407:426  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyWallet.sol\":399:427  require(msg.sender == owner) */\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n        /* \"contracts/MyWallet.sol\":445:455  msg.sender */\n      caller\n        /* \"contracts/MyWallet.sol\":437:465  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyWallet.sol\":437:472  payable(msg.sender).transfer(value) */\n      0x08fc\n        /* \"contracts/MyWallet.sol\":466:471  value */\n      dup3\n        /* \"contracts/MyWallet.sol\":437:472  payable(msg.sender).transfer(value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n        /* \"contracts/MyWallet.sol\":349:479  function withdraw(uint256 value) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyWallet.sol\":210:343  function withdraw() public {... */\n    tag_12:\n        /* \"contracts/MyWallet.sol\":269:274  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyWallet.sol\":255:274  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyWallet.sol\":255:265  msg.sender */\n      caller\n        /* \"contracts/MyWallet.sol\":255:274  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyWallet.sol\":247:275  require(msg.sender == owner) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/MyWallet.sol\":293:303  msg.sender */\n      caller\n        /* \"contracts/MyWallet.sol\":285:313  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyWallet.sol\":285:336  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/MyWallet.sol\":314:335  address(this).balance */\n      selfbalance\n        /* \"contracts/MyWallet.sol\":285:336  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n        /* \"contracts/MyWallet.sol\":210:343  function withdraw() public {... */\n      jump\t// out\n        /* \"contracts/MyWallet.sol\":168:204  function deposit() public payable {} */\n    tag_14:\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_25:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_27:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_28:\n        /* \"#utility.yul\":490:514   */\n      tag_36\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_27\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_37:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_29:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_39\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_28\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_42\n      tag_25\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":766:885   */\n    tag_41:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_43\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_29\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122015432fb26d0c5d5c3210f7e784d9f0062144f2d0ad524bf4adf644394f3160ea64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102528061005b5f395ff3fe608060405260043610610033575f3560e01c80632e1a7d4d146100375780633ccfd60b1461005f578063d0e30db014610075575b5f80fd5b348015610042575f80fd5b5061005d600480360381019061005891906101f1565b61007f565b005b34801561006a575f80fd5b5061007361011c565b005b61007d6101b8565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d5575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610118573d5f803e3d5ffd5b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610172575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156101b5573d5f803e3d5ffd5b50565b565b5f80fd5b5f819050919050565b6101d0816101be565b81146101da575f80fd5b50565b5f813590506101eb816101c7565b92915050565b5f60208284031215610206576102056101ba565b5b5f610213848285016101dd565b9150509291505056fea264697066735822122015432fb26d0c5d5c3210f7e784d9f0062144f2d0ad524bf4adf644394f3160ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x252 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x75 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x7F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x118 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0 DUP2 PUSH2 0x1BE JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB DUP2 PUSH2 0x1C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x206 JUMPI PUSH2 0x205 PUSH2 0x1BA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x213 DUP5 DUP3 DUP6 ADD PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO NUMBER 0x2F 0xB2 PUSH14 0xC5D5C3210F7E784D9F0062144F2 0xD0 0xAD MSTORE 0x4B DELEGATECALL 0xAD 0xF6 PREVRANDAO CODECOPY 0x4F BALANCE PUSH1 0xEA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "69:412:0:-:0;;;113:49;;;;;;;;;;145:10;137:5;;:18;;;;;;;;;;;;;;;;;;69:412;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_16": {
									"entryPoint": 440,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_40": {
									"entryPoint": 284,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_62": {
									"entryPoint": 127,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1022:1",
										"nodeType": "YulBlock",
										"src": "0:1022:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610033575f3560e01c80632e1a7d4d146100375780633ccfd60b1461005f578063d0e30db014610075575b5f80fd5b348015610042575f80fd5b5061005d600480360381019061005891906101f1565b61007f565b005b34801561006a575f80fd5b5061007361011c565b005b61007d6101b8565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d5575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610118573d5f803e3d5ffd5b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610172575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156101b5573d5f803e3d5ffd5b50565b565b5f80fd5b5f819050919050565b6101d0816101be565b81146101da575f80fd5b50565b5f813590506101eb816101c7565b92915050565b5f60208284031215610206576102056101ba565b5b5f610213848285016101dd565b9150509291505056fea264697066735822122015432fb26d0c5d5c3210f7e784d9f0062144f2d0ad524bf4adf644394f3160ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x75 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x7F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x118 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0 DUP2 PUSH2 0x1BE JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB DUP2 PUSH2 0x1C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x206 JUMPI PUSH2 0x205 PUSH2 0x1BA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x213 DUP5 DUP3 DUP6 ADD PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO NUMBER 0x2F 0xB2 PUSH14 0xC5D5C3210F7E784D9F0062144F2 0xD0 0xAD MSTORE 0x4B DELEGATECALL 0xAD 0xF6 PREVRANDAO CODECOPY 0x4F BALANCE PUSH1 0xEA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "69:412:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:130;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;210:133;;;;;;;;;;;;;:::i;:::-;;168:36;;;:::i;:::-;;349:130;421:5;;;;;;;;;;407:19;;:10;:19;;;399:28;;;;;;445:10;437:28;;:35;466:5;437:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:130;:::o;210:133::-;269:5;;;;;;;;;;255:19;;:10;:19;;;247:28;;;;;;293:10;285:28;;:51;314:21;285:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210:133::o;168:36::-;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "118800",
								"executionCost": "24428",
								"totalCost": "143228"
							},
							"external": {
								"deposit()": "141",
								"withdraw()": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 69,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69,
									"end": 481,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 162,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 145,
									"end": 155,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 137,
									"end": 142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 137,
									"end": 155,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 137,
									"end": 155,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 137,
									"end": 155,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69,
									"end": 481,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 481,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 481,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 481,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 69,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 481,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015432fb26d0c5d5c3210f7e784d9f0062144f2d0ad524bf4adf644394f3160ea64736f6c634300081a0033",
									".code": [
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 481,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 349,
											"end": 479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 349,
											"end": 479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 210,
											"end": 343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 210,
											"end": 343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 210,
											"end": 343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 210,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 210,
											"end": 343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 210,
											"end": 343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 204,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 349,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 421,
											"end": 426,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 426,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 421,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 421,
											"end": 426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 407,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 407,
											"end": 426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 407,
											"end": 417,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 407,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 407,
											"end": 426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 407,
											"end": 426,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 399,
											"end": 427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 427,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 399,
											"end": 427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 455,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 437,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 437,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 466,
											"end": 471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 210,
											"end": 343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 269,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 269,
											"end": 274,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 274,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 269,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 269,
											"end": 274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 255,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 255,
											"end": 274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 255,
											"end": 265,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 255,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 255,
											"end": 274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 255,
											"end": 274,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 275,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 303,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 285,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 314,
											"end": 335,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 285,
											"end": 336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 336,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 285,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"withdraw()": "3ccfd60b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyWallet.sol\":\"MyWallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyWallet.sol\":{\"keccak256\":\"0x576d3c609ec33cc3d1323c7ef809ee4fb8ed69a5a5d69ce751badc02c0f8f077\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6d0c4bffa00c9ec3eb170ceb0416c55380892b34a5377de17d95ffe9318a77cc\",\"dweb:/ipfs/QmZcfRBXD4XxRf2xoUtEbjhyctATYGSqPUWoBy7D9wLDis\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/MyWallet.sol:MyWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MyWallet.sol": {
				"ast": {
					"absolutePath": "contracts/MyWallet.sol",
					"exportedSymbols": {
						"MyWallet": [
							63
						]
					},
					"id": 64,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "MyWallet",
							"nameLocation": "78:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "101:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "93:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "93:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "127:35:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "137:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "145:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "149:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "145:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "137:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "137:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "127:0:0"
									},
									"scope": 63,
									"src": "113:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "202:2:0",
										"statements": []
									},
									"functionSelector": "d0e30db0",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "177:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:0:0"
									},
									"scope": 63,
									"src": "168:36:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "237:106:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 20,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "255:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "259:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "255:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 22,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "269:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "255:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "247:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "247:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "247:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 34,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "322:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MyWallet_$63",
																			"typeString": "contract MyWallet"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MyWallet_$63",
																			"typeString": "contract MyWallet"
																		}
																	],
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "314:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 32,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "314:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "314:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "328:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "314:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 28,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "293:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "297:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "293:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "285:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 26,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "285:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "285:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "305:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "285:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "285:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "285:51:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "219:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "227:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:0:0"
									},
									"scope": 63,
									"src": "210:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "389:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 46,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "407:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "411:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "407:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 48,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "421:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "407:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "399:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "399:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 58,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "466:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 54,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "445:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "449:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "445:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "437:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 52,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "437:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "437:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "457:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "437:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "437:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "437:35:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "358:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "367:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:15:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:0:0"
									},
									"scope": 63,
									"src": "349:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 64,
							"src": "69:412:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "36:446:0"
				},
				"id": 0
			}
		}
	}
}